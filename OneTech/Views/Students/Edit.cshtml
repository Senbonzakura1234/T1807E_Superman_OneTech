@model OneTech.Models.Student

@{
    ViewBag.Title = "Edit";
}

<div class="row">
    <div class="col-md-8 mx-auto grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Student</h4>
                <p class="card-description">Edit Student</p>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.CreatedAt)

                    <div class="form-group">
                        @Html.LabelFor(model => model.FullName)
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div class="form-group mb-lg-0">
                            @Html.LabelFor(model => model.Birthday)
                            @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control", @id = "datefilter" } })
                            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ClassId)
                        @Html.DropDownList("ClassId", null, htmlAttributes: new { @class = "form-control mb-2 selectpicker form-selectpicker search-option-select" })
                        @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.StudentStatus)
                        @Html.EnumDropDownListFor(x => x.StudentStatus, null,
                            new { @class = "form-control mb-2 selectpicker form-selectpicker search-option-select" })
                        @Html.ValidationMessageFor(model => model.StudentStatus, "", new { @class = "text-danger text-small" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PenaltyLevel)
                        @Html.EditorFor(model => model.PenaltyLevel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PenaltyLevel, "", new { @class = "text-danger" })
                    </div>
                    <input type="submit" class="btn btn-gradient-primary mr-2" value="Update" />
                    <a class="btn btn-light" href="@Url.Action("Index")">
                        Cancel
                    </a>
                }
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            $('input[name="birthday"]').daterangepicker({
                singleDatePicker: true,
                showDropdowns: true,
                minYear: 1901,
                maxYear: parseInt(moment().format('YYYY'), 10)
            }, function (start, end, label) {
                var years = moment().diff(start, 'years');
                alert("You are " + years + " years old!");
            });
        });
    </script>
}
